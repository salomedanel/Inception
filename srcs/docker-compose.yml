version: '3.1'

services:
  mariadb:
    image: mariadb
    container_name: mariadb
    build:
      context: ./requirements/mariadb #ou se trouve le dockerfile
      dockerfile: Dockerfile          #le nom du Dockerfile
    volumes:
      - mariadb:/var/lib/mysql
    expose:
      - "3306:3306"
    networks:
      - inception
    restart: unless-stopped
    env_file: .env
    healthcheck:
      test: mysqladmin ping --host=localhost -p${SQL_ROOT_PASSWORD}
      interval: 5s
      timeout: 1s
      retries: 20
      start_period: 5s

  wordpress:
    image: wordpress
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wordpress:/var/www/html/wordpress
    expose:
      - "9000:9000"
    networks:
      - inception
    restart: unless-stopped
    env_file: .env
    depends_on:     # ne se lance qu'apres mariadb
      mariadb:
        condition: service_healthy    

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile	
    volumes:
      - wordpress:/var/www/html/wordpress
    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - inception
    restart: unless-stopped
    env_file: .env
    healthcheck:
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 5s

  adminer:
    image: adminer
    container_name: adminer
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mariadb
    ports: 
      - "8080:8080"
    networks:
      - inception

volumes:
  mariadb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'         # allow to share repo and files between host and container
      device: '/home/sdanel/data/mariadb'
  wordpress:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/sdanel/data/wordpress'

networks:
  inception:
      name: inception
      driver: bridge   #specify Docker that the 3 containers can communicate only amon